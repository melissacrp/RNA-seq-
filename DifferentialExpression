## Gene-level differential expression analysis using edgeR - based of arabdesign

if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(version = "3.12")

if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install()
BiocManager::install("edgeR")



BiocManager::install("limma")

install.packages("statmod")
library(edgeR)
getwd()


#common info
matrixDGA <- read.delim(file = "/Users/melissa/Desktop/Transcriptomics&Bioinformatics | Thesis/counts/clean_banana_featurecounts.txt", header = TRUE, 
                        sep=" ")
Cultivar <- factor(c("T","T","T","T","T","T","W","W","W","W","W","W"))
tpi <- factor(c("6h","12h","24h","72h","144h","168h","6h","12h","24h","72h","144h","168h")) #C is 6-12h with mock
colnames(matrixDGA) = c("Gene ID","CT6-12h","T12h","T24h","T3d","T6d","T7d","CW6-12h","W12h","W24h","W3d","W6d","W7d")
types <- factor(c("A","B","C","D","E","F","G","H","I","J","K","L")) #just to differentiate the groups


#here need to account for no replicatesr
y <- DGEList(counts=matrixDGA[,2:13], genes=matrixDGA[,1],group = types)

#create conditions matrix
targets <- data.frame(Sample = colnames(y),Cultivar,tpi)
Group <- factor(paste(targets$Cultivar,targets$tpi,sep="."))
cbind(targets,Group=Group)


keep <- filterByExpr(y) #keeps rows that have worthwhile counts in a minumum number of samples (two samples in this case because the smallest group size is two
table(keep)
y <- y[keep, , keep.lib.sizes=FALSE] #filtrar los que no tienen un nivel significativo de expresion
y <- calcNormFactors(y)
y$samples

plotMDS(y) #data exploration

#create a design matrix
design <- model.matrix(~0+Group)
colnames(design) <- levels(Group)

#assigning a bcv value because there is no way to estimate dispersion 
bcv <- 0.2
fit <- glmFit(y, design, dispersion = bcv^2)
#likelihood (it was changed)
lrt <- glmLRT(fit,coef=2)
topTags(lrt)
lrt

my.contrasts <- makeContrasts(
           T.12vs6 = T.12h-T.6h,
           T.24vs6 = T.24h-T.6h,
           T.72vs6 = T.72h-T.6h,
   T.144vs6 = T.144h-T.6h,
   T.168vs6 = T.168h-T.6h,
           W.12vs6 = W.12h-W.6h,
           W.24vs6 = W.24h-W.6h,
           W.72vs6 = W.72h-W.6h,
   W.144vs6 = W.144h-W.6h,
   W.168vs6 = W.168h-W.6h,
          TvsW.6h = T.6h-W.6h,
           TvsW.12h = (T.12h-T.6h)-(W.12h-W.6h),
           TvsW.24h = (T.24h-T.6h)-(W.24h-W.6h),
   TvsW.72h = (T.72h-T.6h)-(W.72h-W.6h),
   TvsW.144h = (T.144h-T.6h)-(W.144h-W.6h),
   TvsW.168h = (T.168h-T.6h)-(W.168h-W.6h),
   levels=design)

fit.col.names <- colnames(fit)
fit.col.names[1:6]

#genes responding differently to the infection in Tuu gia vs the control 
qlf1 <- glmLRT(fit, contrast=my.contrasts[,"T.12vs6"])
plotMD(qlf1)
topTags(qlf1)
summary(decideTests(qlf1))

qlf2 <- glmLRT(fit, contrast=my.contrasts[,"T.24vs6"])
plotMD(qlf2)
topTags(qlf2)
summary(decideTests(qlf2))

qlf3 <- glmLRT(fit, contrast=my.contrasts[,"T.72vs6"])
plotMD(qlf3)
topTags(qlf3)
summary(decideTests(qlf3))

qlf4 <- glmLRT(fit, contrast=my.contrasts[,"T.144vs6"])
plotMD(qlf4)
topTags(qlf4)
summary(decideTests(qlf4))

qlf5 <- glmLRT(fit, contrast=my.contrasts[,"T.168vs6"])
plotMD(qlf5)
topTags(qlf5)
summary(decideTests(qlf5))

#genes responding differently to the infection in Williams vs the control 
qlf6 <- glmLRT(fit, contrast=my.contrasts[,"W.12vs6"])
plotMD(qlf6)
topTags(qlf6)
summary(decideTests(qlf6))

qlf7 <- glmLRT(fit, contrast=my.contrasts[,"W.24vs6"])
plotMD(qlf7)
topTags(qlf7)
summary(decideTests(qlf7))

qlf8 <- glmLRT(fit, contrast=my.contrasts[,"W.72vs6"])
plotMD(qlf8)
topTags(qlf8)
summary(decideTests(qlf8))

qlf9 <- glmLRT(fit, contrast=my.contrasts[,"W.144vs6"])
plotMD(qlf9)
topTags(qlf9)
summary(decideTests(qlf9))

qlf10 <- glmLRT(fit, contrast=my.contrasts[,"W.168vs6"])
plotMD(qlf10)
topTags(qlf10)
summary(decideTests(qlf10))

#baseline difference between the control
qlf11 <- glmLRT(fit, contrast=my.contrasts[,"TvsW.6h"])
plotMD(qlf11)
topTags(qlf11)
summary(decideTests(qlf11))


#genes responding differently between the two cultivars
qlf12 <- glmLRT(fit, contrast=my.contrasts[,"TvsW.12h"])
plotMD(qlf12)
topTags(qlf12)
summary(decideTests(qlf12))


qlf13 <- glmLRT(fit, contrast=my.contrasts[,"TvsW.24h"])
plotMD(qlf13)
topTags(qlf13)
summary(decideTests(qlf13))

qlf14 <- glmLRT(fit, contrast=my.contrasts[,"TvsW.72h"])
plotMD(qlf14)
topTags(qlf14)
summary(decideTests(qlf14))

qlf15 <- glmLRT(fit, contrast=my.contrasts[,"TvsW.144h"])
plotMD(qlf15)
topTags(qlf15)
summary(decideTests(qlf15))

qlf16 <- glmLRT(fit, contrast=my.contrasts[,"TvsW.168h"])
plotMD(qlf16)
topTags(qlf16)
summary(decideTests(qlf16))

#pathogen effect in Tuu gia cultivar and show the top genes
qlfT <- glmLRT(fit, coef = c(1,2,3,4,5,6))
topTags(qlfT)
summary(decideTests(qlfT))

#pathogen effect in Williams cultivar and show the top genes
qlfW <- glmLRT(fit, coef = c(7,8,9,10,11,12))
topTags(qlfW)
summary(decideTests(qlfW))

#effect of pathogen among all cultivars
qlf <- glmLRT(fit, coef = c(1:12))
topTags(qlf)
summary(decideTests(qlf))

qlfA <- glmLRT(fit)
topTags(qlfA)
summary(decideTests(qlfA))

#counts-per-million for the top gene
top <- rownames(topTags(qlf))
cpm(y)[top,]
#The total number of genes significantly up-regulated or down-regulated at 5% FDR
summary(decideTests(qlf))
plotMD(qlf)
abline(h=c(-1,1), col="blue")


